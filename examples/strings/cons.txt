(0.1) NO MORE PROGRAMS (with 1 literals)
(0.1) NO MORE PROGRAMS (with 2 literals)
(0.1) program 1:
  f(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))),)
(0.1) inclusion rules:
included_clause_fV0V1mk_uppercaseV2V1skip1V0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV2V1skip1V0V2(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV2V1skip1V0V2(C0),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1mk_uppercaseV2V1skip1V0V2(C0),clause_size(C0,2).
(0.1) program 2:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) inclusion rules:
included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.1) program 3:
  f(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))),)
(0.1) inclusion rules:
included_clause_fV0V1copyskip1V0V2mk_uppercaseV2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2mk_uppercaseV2V1(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2mk_uppercaseV2V1(C0),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2).
(0.1) program 4:
  f(A,B) :- skip1(A,C),copyskip1(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))),)
(0.1) inclusion rules:
included_clause_fV0V1copyskip1V2V1skip1V0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1skip1V0V2(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1skip1V0V2(C0),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1skip1V0V2(C0),clause_size(C0,2).
(0.1) program 5:
  f(A,B) :- skip1(A,C),skip1(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))),)
(0.1) inclusion rules:
included_clause_fV0V1skip1V0V2skip1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1skip1V0V2skip1V2V1(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1skip1V0V2skip1V2V1(C0),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1skip1V0V2skip1V2V1(C0),clause_size(C0,2).
(0.1) program 6:
  f(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))),)
(0.1) inclusion rules:
included_clause_fV0V1copyskip1V0V2copyskip1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2copyskip1V2V1(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2copyskip1V2V1(C0),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2copyskip1V2V1(C0),clause_size(C0,2).
(0.1) program 7:
  f(A,B) :- copyskip1(A,C),skip1(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))),)
(0.1) inclusion rules:
included_clause_fV0V1copyskip1V0V2skip1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2skip1V2V1(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2skip1V2V1(C0),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2skip1V2V1(C0),clause_size(C0,2).
(0.1) program 8:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) inclusion rules:
included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.1) program 9:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) inclusion rules:
included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 1,not clause(1).
(0.1) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.1) NO MORE PROGRAMS (with 3 literals)
(0.1) NO MORE PROGRAMS (with 4 literals)
(0.1) NO MORE PROGRAMS (with 5 literals)
(0.1) program 10:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.1) inclusion rules:
included_clause_fV0V1inv1V2V1skip1V0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.1) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.1) program 11:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.1) TP: 0, TN: 0, FN: 1, FP: 0
(0.1) inclusion rules:
included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.2) program 12:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 13:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,inv1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 14:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 15:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_fV0V1copyskip1V2V1inv1V0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,inv1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 16:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_fV0V1inv1V0V2skip1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,inv1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 17:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) inclusion rules:
included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.2) program 18:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.2) inclusion rules:
included_clause_fV0V1copyskip1V0V2inv1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 19:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.2) inclusion rules:
included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 20:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.2) program 21:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 22:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.2) program 23:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 24:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.2) program 25:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 26:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_inv1V0V1skip1V0V2skip1V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 27:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 28:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.2) program 29:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 30:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.2) program 31:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 32:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.2) program 33:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 34:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(0.2) inclusion rules:
included_clause_fV0V1inv1V0V2inv1V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,inv1,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.2) program 35:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 36:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.2) program 37:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),C1!=C0.
(0.2) program 38:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.2) program 39:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.2) program 40:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.2) program 41:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.2) TP: 0, TN: 0, FN: 1, FP: 0
(0.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.2) inclusion rules:
included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 42:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.3) program 43:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) inclusion rules:
included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 44:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) program 45:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.3) program 46:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.3) program 47:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.3) program 48:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.3) program 49:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 50:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.3) program 51:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 52:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 53:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 54:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.3) program 55:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 56:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.3) program 57:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.3) program 58:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 59:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 60:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 61:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 62:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 63:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 64:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),C1!=C0.
(0.3) program 65:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.3) program 66:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.3) program 67:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.3) program 68:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.3) TP: 0, TN: 0, FN: 1, FP: 0
(0.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.4) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.4) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.4) program 69:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 2,not clause(2),C1!=C0.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.4) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),C1!=C0.
(0.4) program 70:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.4) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.4) program 71:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.4) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.4) program 72:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 2,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 2,not clause(2),C1!=C0.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(0.4) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),C1!=C0.
(0.4) NO MORE PROGRAMS (with 6 literals)
(0.4) NO MORE PROGRAMS (with 7 literals)
(0.4) NO MORE PROGRAMS (with 8 literals)
(0.4) program 73:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(0.4) program 74:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(0.4) program 75:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) inclusion rules:
included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) program 76:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.4) program 77:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) inclusion rules:
included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) program 78:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) program 79:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) program 80:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.4) program 81:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) inclusion rules:
included_clause_inv1V0V1inv1V2V1skip1V0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) program 82:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) inclusion rules:
included_clause_fV0V1inv1V2V1inv2V0V2(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,inv2,2,(CV0,CV2)),body_literal(C,inv1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.4) program 83:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.4) program 84:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.4) TP: 0, TN: 0, FN: 1, FP: 0
(0.4) inclusion rules:
included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,inv2,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(0.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.5) program 85:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.5) program 86:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.5) program 87:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.5) program 88:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.5) program 89:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.5) inclusion rules:
included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(0.5) program 90:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.5) program 91:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.5) program 92:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.5) program 93:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.5) program 94:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.5) program 95:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.5) program 96:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(0.5) program 97:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),separable.
(0.5) program 98:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(0.5) program 99:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.5) program 100:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.5) program 101:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.5) program 102:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(0.5) program 103:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.5) TP: 0, TN: 0, FN: 1, FP: 0
(0.5) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.5) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),separable.
(0.6) program 104:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(0.6) program 105:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) program 106:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) program 107:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),separable.
(0.6) program 108:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(0.6) program 109:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.6) program 110:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.6) program 111:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.6) program 112:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.6) program 113:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(0.6) program 114:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(0.6) program 115:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.6) program 116:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.6) program 117:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.6) program 118:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.6) program 119:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.6) program 120:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.6) program 121:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.6) program 122:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.6) TP: 0, TN: 0, FN: 1, FP: 0
(0.6) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.6) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.7) program 123:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.7) program 124:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.7) program 125:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(0.7) program 126:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(0.7) inclusion rules:
included_clause_fV0V1inv1V0V2inv2V2V1(C):-head_literal(C,f,2,(CV0,CV1)),body_literal(C,inv1,2,(CV0,CV2)),body_literal(C,inv2,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.7) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(0.7) program 127:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.7) program 128:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.7) program 129:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.7) program 130:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.7) program 131:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.7) program 132:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.7) program 133:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.7) program 134:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.7) program 135:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.7) program 136:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.7) program 137:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.7) program 138:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.7) program 139:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.7) TP: 0, TN: 0, FN: 1, FP: 0
(0.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 140:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.8) program 141:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.8) program 142:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.8) program 143:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 144:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 145:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) inclusion rules:
included_clause_inv1V0V1inv2V0V2inv2V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,inv2,2,(CV0,CV2)),body_literal(C,inv2,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 146:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 147:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) inclusion rules:
included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.8) program 148:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) inclusion rules:
included_clause_inv1V0V1inv2V2V1skip1V0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,inv2,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 149:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.8) program 150:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.8) program 151:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.8) program 152:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.8) program 153:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.8) program 154:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(0.8) program 155:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(0.8) TP: 0, TN: 0, FN: 1, FP: 0
(0.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(0.8) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(0.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(0.9) program 156:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.9) program 157:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.9) program 158:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(0.9) program 159:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.9) program 160:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.9) program 161:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.9) program 162:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) inclusion rules:
included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(0.9) program 163:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.9) program 164:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.9) program 165:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) inclusion rules:
included_clause_inv2V0V1skip1V0V2skip1V2V1(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(0.9) program 166:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(0.9) program 167:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(0.9) program 168:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(0.9) program 169:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(0.9) program 170:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(0.9) program 171:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(0.9) TP: 0, TN: 0, FN: 1, FP: 0
(0.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(0.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(0.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(0.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.0) program 172:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.0) program 173:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) inclusion rules:
included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.0) program 174:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) inclusion rules:
included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.0) program 175:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.0) program 176:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.0) program 177:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.0) program 178:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.0) program 179:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.0) program 180:
  f(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2mk_uppercaseV2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.0) program 181:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.0) program 182:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) inclusion rules:
included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,inv2,2,(CV0,CV2)),body_literal(C,mk_uppercase,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.0) program 183:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.0) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.0) program 184:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.0) program 185:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(1.0) program 186:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.0) TP: 0, TN: 0, FN: 1, FP: 0
(1.0) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.0) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.0) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.1) program 187:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.1) program 188:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) inclusion rules:
included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,copyskip1,2,(CV0,CV2)),body_literal(C,inv2,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.1) program 189:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.1) program 190:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) inclusion rules:
included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,inv2,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.1) program 191:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.1) program 192:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(1.1) program 193:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(1.1) program 194:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.1) program 195:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.1) program 196:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.1) program 197:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) inclusion rules:
included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,skip1,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(1.1) program 198:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.1) program 199:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.1) TP: 0, TN: 0, FN: 1, FP: 0
(1.1) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.1) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.2) program 200:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) inclusion rules:
included_clause_inv1V0V1inv2V0V2skip1V2V1(C):-head_literal(C,inv1,2,(CV0,CV1)),body_literal(C,inv2,2,(CV0,CV2)),body_literal(C,skip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.2) program 201:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) program 202:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.2) program 203:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.2) program 204:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) program 205:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.2) program 206:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) program 207:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.2) program 208:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.2) program 209:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.2) program 210:
  f(A,B) :- mk_uppercase(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1mk_uppercaseV0V2skip1V2V1(C0),separable.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.2) program 211:
  f(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1mk_uppercaseV0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.2) program 212:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(1.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.2) program 213:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.2) TP: 0, TN: 0, FN: 1, FP: 0
(1.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.3) program 214:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.3) program 215:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.3) program 216:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.3) program 217:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.3) program 218:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 219:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 220:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 221:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 222:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 223:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 224:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) program 225:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.3) TP: 0, TN: 0, FN: 1, FP: 0
(1.3) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.4) program 226:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 227:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 228:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 229:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.4) program 230:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.4) program 231:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.4) program 232:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 233:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 234:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 235:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 236:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) program 237:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.4) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.4) program 238:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.4) TP: 0, TN: 0, FN: 1, FP: 0
(1.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.5) program 239:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 240:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 241:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 242:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 243:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 244:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 245:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.5) program 246:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.5) program 247:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.5) program 248:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.5) program 249:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.5) TP: 0, TN: 0, FN: 1, FP: 0
(1.5) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.5) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 250:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 251:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.6) program 252:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 253:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 254:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.6) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 255:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 256:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.6) program 257:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) inclusion rules:
included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C):-head_literal(C,inv2,2,(CV0,CV1)),body_literal(C,mk_uppercase,2,(CV0,CV2)),body_literal(C,copyskip1,2,(CV2,CV1)),CV1!=CV0,CV2!=CV0,CV2!=CV1.
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.6) program 258:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.6) program 259:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.6) program 260:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.6) TP: 0, TN: 0, FN: 1, FP: 0
(1.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.7) program 261:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.7) program 262:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.7) program 263:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.7) program 264:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.7) program 265:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(1.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.7) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.7) program 266:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(1.7) program 267:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.7) program 268:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(1.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.7) program 269:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(1.7) program 270:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(1.7) program 271:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(1.7) TP: 0, TN: 0, FN: 1, FP: 0
(1.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(1.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.8) program 272:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 273:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 274:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 275:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 276:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 277:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 278:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 279:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 280:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.8) program 281:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(1.8) TP: 0, TN: 0, FN: 1, FP: 0
(1.8) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(1.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.8) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(1.8) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.9) program 282:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(1.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(1.9) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.9) program 283:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(1.9) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.9) program 284:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(1.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(1.9) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.9) program 285:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(1.9) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(1.9) program 286:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.9) program 287:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.9) program 288:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(1.9) program 289:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(1.9) program 290:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) program 291:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(1.9) program 292:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(1.9) TP: 0, TN: 0, FN: 1, FP: 0
(1.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(1.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(1.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(1.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.0) program 293:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.0) program 294:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.0) program 295:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.0) program 296:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),separable.
(2.0) program 297:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.0) program 298:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.0) program 299:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(2.0) program 300:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(2.0) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.0) program 301:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.0) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.0) program 302:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(2.0) TP: 0, TN: 0, FN: 1, FP: 0
(2.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.1) program 303:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.1) program 304:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(2.1) program 305:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.1) program 306:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(2.1) program 307:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(2.1) program 308:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.1) program 309:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.1) program 310:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.1) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.1) program 311:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.1) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.1) program 312:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(2.1) TP: 0, TN: 0, FN: 1, FP: 0
(2.1) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(2.1) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.2) program 313:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(2.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.2) program 314:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.2) program 315:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(2.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(2.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.2) program 316:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(2.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.2) program 317:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(2.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.2) program 318:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(2.2) program 319:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.2) program 320:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(2.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.2) program 321:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.2) program 322:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.2) TP: 0, TN: 0, FN: 1, FP: 0
(2.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.3) program 323:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.3) program 324:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(2.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.3) program 325:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.3) program 326:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.3) program 327:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.3) program 328:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.3) program 329:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(2.3) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.3) program 330:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.3) program 331:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.3) program 332:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.3) TP: 0, TN: 0, FN: 1, FP: 0
(2.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.4) program 333:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(2.4) program 334:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.4) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.4) program 335:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.4) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.4) program 336:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.4) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.4) program 337:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.4) program 338:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.4) program 339:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.4) program 340:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.4) program 341:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(2.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(2.4) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.4) program 342:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.4) TP: 0, TN: 0, FN: 1, FP: 0
(2.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(2.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(2.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.5) program 343:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(2.5) program 344:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(2.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.5) program 345:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(2.5) program 346:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(2.5) program 347:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.5) program 348:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.5) program 349:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.5) program 350:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(2.5) program 351:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.5) program 352:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.5) TP: 0, TN: 0, FN: 1, FP: 0
(2.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.6) program 353:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.6) program 354:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.6) program 355:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.6) program 356:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.6) program 357:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.6) program 358:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2inv1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.6) program 359:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(2.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.6) program 360:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.6) program 361:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.6) TP: 0, TN: 0, FN: 1, FP: 0
(2.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.6) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.7) program 362:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.7) program 363:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.7) program 364:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.7) program 365:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(2.7) program 366:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.7) program 367:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.7) program 368:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.7) program 369:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.7) program 370:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.7) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.7) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(2.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.7) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.7) program 371:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.7) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.8) program 372:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(2.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.8) program 373:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.8) program 374:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.8) program 375:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.8) program 376:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.8) program 377:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(2.8) program 378:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.8) program 379:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) program 380:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.8) TP: 0, TN: 0, FN: 1, FP: 0
(2.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(2.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.9) program 381:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),separable.
(2.9) program 382:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(2.9) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.9) program 383:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(2.9) program 384:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(2.9) program 385:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.9) program 386:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(2.9) program 387:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(2.9) program 388:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(2.9) TP: 0, TN: 0, FN: 1, FP: 0
(2.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(2.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(2.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(2.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.0) program 389:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.0) program 390:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.0) program 391:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(3.0) program 392:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.0) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.0) program 393:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.0) program 394:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.0) program 395:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.0) program 396:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.0) TP: 0, TN: 0, FN: 1, FP: 0
(3.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.1) program 397:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(3.1) program 398:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.1) program 399:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(3.1) program 400:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(3.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.1) program 401:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.1) program 402:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.1) program 403:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(3.1) program 404:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.1) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.1) program 405:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(3.1) TP: 0, TN: 0, FN: 1, FP: 0
(3.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(3.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(3.2) program 406:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.2) program 407:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(3.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(3.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.2) program 408:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.2) program 409:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(3.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(3.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.2) program 410:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(3.2) program 411:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.2) program 412:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(3.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.2) program 413:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.2) TP: 0, TN: 0, FN: 1, FP: 0
(3.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.2) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.3) program 414:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.3) program 415:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.3) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.3) program 416:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.3) program 417:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.3) program 418:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(3.3) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.3) program 419:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.3) program 420:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.3) program 421:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(3.3) TP: 0, TN: 0, FN: 1, FP: 0
(3.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv1(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))))
(3.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.4) program 422:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.4) program 423:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(3.4) program 424:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.4) program 425:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.4) program 426:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(3.4) program 427:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(3.4) program 428:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.4) program 429:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.4) TP: 0, TN: 0, FN: 1, FP: 0
(3.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(3.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.5) program 430:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.5) program 431:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.5) program 432:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(3.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.5) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.5) program 433:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(3.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.5) program 434:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(3.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.5) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.5) program 435:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(3.5) program 436:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.5) program 437:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(3.5) TP: 0, TN: 0, FN: 1, FP: 0
(3.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(3.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(3.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.6) program 438:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.6) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.6) program 439:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(3.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.6) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.6) program 440:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(3.6) program 441:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.6) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.6) program 442:
  f(A,B) :- inv1(A,C),skip1(C,B).
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(3.6) program 443:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.6) program 444:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.6) program 445:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.6) TP: 0, TN: 0, FN: 1, FP: 0
(3.6) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(3.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.7) program 446:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.7) program 447:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(3.7) program 448:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(3.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.7) program 449:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(3.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.7) program 450:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.7) program 451:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.7) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.7) program 452:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(3.7) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.7) program 453:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.7) TP: 0, TN: 0, FN: 1, FP: 0
(3.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.8) program 454:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.8) program 455:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(3.8) program 456:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv1(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))))
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.8) program 457:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.8) program 458:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.8) program 459:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.8) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.8) program 460:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.8) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.8) program 461:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.8) TP: 0, TN: 0, FN: 1, FP: 0
(3.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(3.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.9) program 462:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(3.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.9) program 463:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(3.9) program 464:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(3.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.9) program 465:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(3.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(3.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.9) program 466:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(3.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(3.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(3.9) program 467:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(3.9) program 468:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(3.9) TP: 0, TN: 0, FN: 1, FP: 0
(3.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(3.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(3.9) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(3.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.0) program 469:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(4.0) program 470:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.0) program 471:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(4.0) program 472:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.0) program 473:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(4.0) program 474:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(4.0) program 475:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.0) TP: 0, TN: 0, FN: 1, FP: 0
(4.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.0) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(4.0) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.1) program 476:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(4.1) program 477:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.1) program 478:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.1) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(4.1) program 479:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.1) program 480:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(4.1) program 481:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(4.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.1) program 482:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(4.1) TP: 0, TN: 0, FN: 1, FP: 0
(4.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) program 483:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(4.2) program 484:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(4.2) program 485:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(4.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.2) program 486:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(4.2) program 487:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(4.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.2) program 488:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.2) program 489:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.2) TP: 0, TN: 0, FN: 1, FP: 0
(4.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(4.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.3) program 490:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.3) TP: 0, TN: 0, FN: 1, FP: 0
(4.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(4.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.3) program 491:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.3) TP: 0, TN: 0, FN: 1, FP: 0
(4.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(4.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.3) program 492:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.3) TP: 0, TN: 0, FN: 1, FP: 0
(4.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.3) program 493:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.3) TP: 0, TN: 0, FN: 1, FP: 0
(4.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(4.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(4.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.3) program 494:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.3) TP: 0, TN: 0, FN: 1, FP: 0
(4.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(4.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(4.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.3) program 495:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.3) TP: 0, TN: 0, FN: 1, FP: 0
(4.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(4.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.3) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),separable.
(4.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.3) program 496:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.4) program 497:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(4.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.4) program 498:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(4.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(4.4) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.4) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.4) program 499:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) program 500:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) program 501:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) program 502:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
(4.4) TP: 0, TN: 0, FN: 1, FP: 0
(4.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(4.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(4.5) program 503:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.5) program 504:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(4.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.5) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.5) program 505:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(4.5) program 506:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.5) program 507:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.5) program 508:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.5) program 509:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.5) TP: 0, TN: 0, FN: 1, FP: 0
(4.5) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(4.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.5) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(4.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.6) program 510:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.6) TP: 0, TN: 0, FN: 1, FP: 0
(4.6) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(4.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(4.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.6) program 511:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.6) TP: 0, TN: 0, FN: 1, FP: 0
(4.6) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(4.6) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.6) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(4.6) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(4.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.6) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.6) program 512:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.6) TP: 0, TN: 0, FN: 1, FP: 0
(4.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.6) program 513:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(4.6) TP: 0, TN: 0, FN: 1, FP: 0
(4.6) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(4.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(4.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(4.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(4.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.6) program 514:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(4.6) TP: 0, TN: 0, FN: 1, FP: 0
(4.6) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(4.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(4.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(4.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(4.6) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(4.6) program 515:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(4.6) TP: 0, TN: 0, FN: 1, FP: 0
(4.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) program 516:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.7) program 517:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(4.7) program 518:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(4.7) program 519:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(4.7) program 520:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(4.7) program 521:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(4.7) program 522:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(4.7) TP: 0, TN: 0, FN: 1, FP: 0
(4.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(4.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(4.8) program 523:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(4.8) TP: 0, TN: 0, FN: 1, FP: 0
(4.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.8) program 524:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(4.8) TP: 0, TN: 0, FN: 1, FP: 0
(4.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(4.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(4.8) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(4.8) program 525:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.8) TP: 0, TN: 0, FN: 1, FP: 0
(4.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(4.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.8) program 526:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.8) TP: 0, TN: 0, FN: 1, FP: 0
(4.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.8) program 527:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.8) TP: 0, TN: 0, FN: 1, FP: 0
(4.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(4.8) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.8) program 528:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.8) TP: 0, TN: 0, FN: 1, FP: 0
(4.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.8) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(4.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(4.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.9) program 529:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.9) TP: 0, TN: 0, FN: 1, FP: 0
(4.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(4.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.9) program 530:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.9) TP: 0, TN: 0, FN: 1, FP: 0
(4.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(4.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.9) program 531:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.9) TP: 0, TN: 0, FN: 1, FP: 0
(4.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(4.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(4.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.9) program 532:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.9) TP: 0, TN: 0, FN: 1, FP: 0
(4.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(4.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(4.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.9) program 533:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.9) TP: 0, TN: 0, FN: 1, FP: 0
(4.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(4.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(4.9) program 534:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(4.9) TP: 0, TN: 0, FN: 1, FP: 0
(4.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(4.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(4.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(4.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) program 535:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) program 536:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) program 537:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) program 538:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) program 539:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) program 540:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(5.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.0) program 541:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.0) TP: 0, TN: 0, FN: 1, FP: 0
(5.0) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(5.0) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.0) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.0) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.1) program 542:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.1) TP: 0, TN: 0, FN: 1, FP: 0
(5.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(5.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.1) program 543:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.1) TP: 0, TN: 0, FN: 1, FP: 0
(5.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.1) program 544:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.1) TP: 0, TN: 0, FN: 1, FP: 0
(5.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.1) program 545:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.1) TP: 0, TN: 0, FN: 1, FP: 0
(5.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(5.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.1) program 546:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.1) TP: 0, TN: 0, FN: 1, FP: 0
(5.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(5.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.1) program 547:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.1) TP: 0, TN: 0, FN: 1, FP: 0
(5.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.1) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.2) program 548:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.2) TP: 0, TN: 0, FN: 1, FP: 0
(5.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(5.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.2) program 549:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.2) TP: 0, TN: 0, FN: 1, FP: 0
(5.2) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.2) program 550:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.2) TP: 0, TN: 0, FN: 1, FP: 0
(5.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(5.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.2) program 551:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.2) TP: 0, TN: 0, FN: 1, FP: 0
(5.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.2) program 552:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.2) TP: 0, TN: 0, FN: 1, FP: 0
(5.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(5.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.2) program 553:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.2) TP: 0, TN: 0, FN: 1, FP: 0
(5.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(5.2) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.3) program 554:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.3) TP: 0, TN: 0, FN: 1, FP: 0
(5.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(5.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2mk_uppercaseV2V1(C1),separable.
(5.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.3) program 555:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.3) TP: 0, TN: 0, FN: 1, FP: 0
(5.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.3) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.3) program 556:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.3) TP: 0, TN: 0, FN: 1, FP: 0
(5.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.3) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.3) program 557:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(5.3) TP: 0, TN: 0, FN: 1, FP: 0
(5.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(5.3) program 558:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(5.3) TP: 0, TN: 0, FN: 1, FP: 0
(5.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(5.3) program 559:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(5.3) TP: 0, TN: 0, FN: 1, FP: 0
(5.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.3) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.3) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(5.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(5.4) program 560:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(5.4) TP: 0, TN: 0, FN: 1, FP: 0
(5.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(5.4) program 561:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),skip1(C,B).
(5.4) TP: 0, TN: 0, FN: 1, FP: 0
(5.4) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))))
(5.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(5.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(5.4) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1mk_uppercaseV0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.4) program 562:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.4) TP: 0, TN: 0, FN: 1, FP: 0
(5.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.4) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.4) program 563:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.4) TP: 0, TN: 0, FN: 1, FP: 0
(5.4) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(5.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.4) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.4) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.4) program 564:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(5.4) TP: 0, TN: 0, FN: 1, FP: 0
(5.4) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(5.4) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.4) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(5.4) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.4) program 565:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(5.4) TP: 0, TN: 0, FN: 1, FP: 0
(5.4) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(5.4) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.4) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(5.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(5.4) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.5) program 566:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.5) TP: 0, TN: 0, FN: 1, FP: 0
(5.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(5.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.5) program 567:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.5) TP: 0, TN: 0, FN: 1, FP: 0
(5.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(5.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.5) program 568:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.5) TP: 0, TN: 0, FN: 1, FP: 0
(5.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.5) program 569:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(5.5) TP: 0, TN: 0, FN: 1, FP: 0
(5.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.5) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(5.5) program 570:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.5) TP: 0, TN: 0, FN: 1, FP: 0
(5.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(5.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.5) program 571:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.5) TP: 0, TN: 0, FN: 1, FP: 0
(5.5) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(5.5) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.5) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(5.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.5) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.6) program 572:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.6) TP: 0, TN: 0, FN: 1, FP: 0
(5.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(5.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.6) program 573:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.6) TP: 0, TN: 0, FN: 1, FP: 0
(5.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(5.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.6) program 574:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.6) TP: 0, TN: 0, FN: 1, FP: 0
(5.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.6) program 575:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.6) TP: 0, TN: 0, FN: 1, FP: 0
(5.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(5.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.6) program 576:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.6) TP: 0, TN: 0, FN: 1, FP: 0
(5.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.6) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.6) program 577:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.6) TP: 0, TN: 0, FN: 1, FP: 0
(5.6) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.6) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.6) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.6) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.7) program 578:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.7) TP: 0, TN: 0, FN: 1, FP: 0
(5.7) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(5.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(5.7) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.7) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.7) program 579:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(5.7) TP: 0, TN: 0, FN: 1, FP: 0
(5.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(5.7) program 580:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.7) TP: 0, TN: 0, FN: 1, FP: 0
(5.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.7) program 581:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(5.7) TP: 0, TN: 0, FN: 1, FP: 0
(5.7) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.7) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(5.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(5.7) program 582:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(5.7) TP: 0, TN: 0, FN: 1, FP: 0
(5.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(5.7) program 583:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(5.7) TP: 0, TN: 0, FN: 1, FP: 0
(5.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.7) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(5.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(5.8) program 584:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(5.8) TP: 0, TN: 0, FN: 1, FP: 0
(5.8) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(5.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.8) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(5.8) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.8) program 585:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(5.8) TP: 0, TN: 0, FN: 1, FP: 0
(5.8) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(5.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(5.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.8) program 586:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.8) TP: 0, TN: 0, FN: 1, FP: 0
(5.8) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.8) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.8) program 587:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.8) TP: 0, TN: 0, FN: 1, FP: 0
(5.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(5.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.8) program 588:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.8) TP: 0, TN: 0, FN: 1, FP: 0
(5.8) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.8) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(5.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.8) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.8) program 589:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.8) TP: 0, TN: 0, FN: 1, FP: 0
(5.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(5.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(5.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.9) program 590:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.9) TP: 0, TN: 0, FN: 1, FP: 0
(5.9) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.9) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.9) program 591:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.9) TP: 0, TN: 0, FN: 1, FP: 0
(5.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.9) program 592:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.9) TP: 0, TN: 0, FN: 1, FP: 0
(5.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(5.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.9) program 593:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(5.9) TP: 0, TN: 0, FN: 1, FP: 0
(5.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(5.9) program 594:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(5.9) TP: 0, TN: 0, FN: 1, FP: 0
(5.9) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))))
(5.9) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.9) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(5.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(5.9) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(5.9) program 595:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
(5.9) TP: 0, TN: 0, FN: 1, FP: 0
(5.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(5.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(5.9) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C2),separable.
(6.0) program 596:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(6.0) TP: 0, TN: 0, FN: 1, FP: 0
(6.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.0) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(6.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(6.0) program 597:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.0) TP: 0, TN: 0, FN: 1, FP: 0
(6.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(6.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.0) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.0) program 598:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(6.0) TP: 0, TN: 0, FN: 1, FP: 0
(6.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(6.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(6.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(6.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(6.0) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.0) program 599:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(6.0) TP: 0, TN: 0, FN: 1, FP: 0
(6.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(6.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(6.0) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(6.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(6.0) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.0) program 600:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(6.0) TP: 0, TN: 0, FN: 1, FP: 0
(6.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(6.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(6.0) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(6.0) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.0) program 601:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.0) TP: 0, TN: 0, FN: 1, FP: 0
(6.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.1) program 602:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.1) TP: 0, TN: 0, FN: 1, FP: 0
(6.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.1) program 603:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.1) TP: 0, TN: 0, FN: 1, FP: 0
(6.1) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(6.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(6.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.1) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.1) program 604:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.1) TP: 0, TN: 0, FN: 1, FP: 0
(6.1) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.1) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),separable.
(6.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.1) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.1) program 605:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.1) TP: 0, TN: 0, FN: 1, FP: 0
(6.1) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(6.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.1) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.1) program 606:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.1) TP: 0, TN: 0, FN: 1, FP: 0
(6.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(6.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(6.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.1) program 607:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.2) TP: 0, TN: 0, FN: 1, FP: 0
(6.2) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv2(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.2) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(6.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(6.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.2) program 608:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.2) TP: 0, TN: 0, FN: 1, FP: 0
(6.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(6.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(6.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.2) program 609:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.2) TP: 0, TN: 0, FN: 1, FP: 0
(6.2) FAILED!!! ((0, f(+V0,-V1), (inv2(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.2) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.2) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(6.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),separable.
(6.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.2) generalisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.2) program 610:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(6.2) TP: 0, TN: 0, FN: 1, FP: 0
(6.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))), (2, inv1(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))))
(6.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),clause_size(C1,2),included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.2) program 611:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(6.2) TP: 0, TN: 0, FN: 1, FP: 0
(6.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv1(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))))
(6.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.2) program 612:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(6.2) TP: 0, TN: 0, FN: 1, FP: 0
(6.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(6.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.3) program 613:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.3) TP: 0, TN: 0, FN: 1, FP: 0
(6.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.3) elimination constraint:
:-included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),separable.
(6.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1skip1V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.3) program 614:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- skip1(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.3) TP: 0, TN: 0, FN: 1, FP: 0
(6.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),separable.
(6.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1skip1V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.3) program 615:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- copyskip1(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.3) TP: 0, TN: 0, FN: 1, FP: 0
(6.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), inv2(+V2,-V1))), (1, inv1(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),separable.
(6.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V0V2copyskip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.3) program 616:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
(6.3) TP: 0, TN: 0, FN: 1, FP: 0
(6.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), mk_uppercase(+V2,-V1))))
(6.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.3) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.3) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(6.3) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),separable.
(6.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2mk_uppercaseV2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.3) program 617:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.3) TP: 0, TN: 0, FN: 1, FP: 0
(6.3) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.3) program 618:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(6.3) TP: 0, TN: 0, FN: 1, FP: 0
(6.3) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), skip1(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(6.3) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.3) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.4) program 619:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.4) TP: 0, TN: 0, FN: 1, FP: 0
(6.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(6.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.4) program 620:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.4) TP: 0, TN: 0, FN: 1, FP: 0
(6.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(6.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.4) program 621:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.4) TP: 0, TN: 0, FN: 1, FP: 0
(6.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.4) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.4) program 622:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.4) TP: 0, TN: 0, FN: 1, FP: 0
(6.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.4) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(6.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.4) program 623:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.4) TP: 0, TN: 0, FN: 1, FP: 0
(6.4) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.4) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),separable.
(6.4) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(6.4) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.5) program 624:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(6.5) TP: 0, TN: 0, FN: 1, FP: 0
(6.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),separable.
(6.5) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(6.5) program 625:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),skip1(C,B).
(6.5) TP: 0, TN: 0, FN: 1, FP: 0
(6.5) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), skip1(+V2,-V1))))
(6.5) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.5) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(6.5) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(6.5) elimination constraint:
:-included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),separable.
(6.5) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1skip1V0V2skip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.5) program 626:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(6.5) TP: 0, TN: 0, FN: 1, FP: 0
(6.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(6.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(6.5) program 627:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(6.5) TP: 0, TN: 0, FN: 1, FP: 0
(6.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(6.5) program 628:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(6.5) TP: 0, TN: 0, FN: 1, FP: 0
(6.5) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.5) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.5) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.5) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(6.5) program 629:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.6) TP: 0, TN: 0, FN: 1, FP: 0
(6.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.6) program 630:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.6) TP: 0, TN: 0, FN: 1, FP: 0
(6.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.6) program 631:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.6) TP: 0, TN: 0, FN: 1, FP: 0
(6.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.6) program 632:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),skip1(C,B).
(6.6) TP: 0, TN: 0, FN: 1, FP: 0
(6.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(6.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2skip1V2V1(C2),separable.
(6.6) program 633:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(6.6) TP: 0, TN: 0, FN: 1, FP: 0
(6.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(6.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(6.6) program 634:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(6.6) TP: 0, TN: 0, FN: 1, FP: 0
(6.6) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.6) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.6) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(6.6) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(6.7) program 635:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv2(A,B) :- skip1(A,C),mk_uppercase(C,B).
(6.7) TP: 0, TN: 0, FN: 1, FP: 0
(6.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.7) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(6.7) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(6.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV2V1skip1V0V2(C2),separable.
(6.7) program 636:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(6.7) TP: 0, TN: 0, FN: 1, FP: 0
(6.7) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(6.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.7) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.7) program 637:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.7) TP: 0, TN: 0, FN: 1, FP: 0
(6.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(6.7) elimination constraint:
:-included_clause_inv1V0V1copyskip1V0V2inv2V2V1(C1),separable.
(6.7) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.7) program 638:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(6.7) TP: 0, TN: 0, FN: 1, FP: 0
(6.7) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.7) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(6.7) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.7) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(6.7) program 639:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.7) TP: 0, TN: 0, FN: 1, FP: 0
(6.7) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.8) program 640:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.8) TP: 0, TN: 0, FN: 1, FP: 0
(6.8) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.8) program 641:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),skip1(C,B).
(6.8) TP: 0, TN: 0, FN: 1, FP: 0
(6.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(6.8) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2skip1V2V1(C2),separable.
(6.8) program 642:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(6.8) TP: 0, TN: 0, FN: 1, FP: 0
(6.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(6.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(6.8) program 643:
  f(A,B) :- inv2(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(6.8) TP: 0, TN: 0, FN: 1, FP: 0
(6.8) specialisation constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.8) elimination constraint:
:-included_clause_fV0V1inv1V2V1inv2V0V2(C0),separable.
(6.8) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.8) elimination constraint:
:-included_clause_inv2V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(6.8) program 644:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(6.8) TP: 0, TN: 0, FN: 1, FP: 0
(6.8) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.8) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(6.8) elimination constraint:
:-included_clause_inv1V0V1inv2V2V1mk_uppercaseV0V2(C1),separable.
(6.8) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(6.8) program 645:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- copyskip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.8) TP: 0, TN: 0, FN: 1, FP: 0
(6.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.9) program 646:
  f(A,B) :- mk_uppercase(A,C),inv1(C,B).
  inv1(A,B) :- skip1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.9) TP: 0, TN: 0, FN: 1, FP: 0
(6.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1mk_uppercaseV0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV2V1skip1V0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.9) program 647:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(6.9) TP: 0, TN: 0, FN: 1, FP: 0
(6.9) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (mk_uppercase(+V0,-V2), copyskip1(+V2,-V1))))
(6.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(6.9) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(6.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(6.9) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1mk_uppercaseV0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.9) program 648:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(6.9) TP: 0, TN: 0, FN: 1, FP: 0
(6.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.9) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(6.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(6.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(6.9) program 649:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(6.9) TP: 0, TN: 0, FN: 1, FP: 0
(6.9) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(6.9) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(6.9) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(6.9) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(6.9) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(6.9) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(6.9) program 650:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(6.9) TP: 0, TN: 0, FN: 1, FP: 0
(6.9) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.0) program 651:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
(7.0) TP: 0, TN: 0, FN: 1, FP: 0
(7.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),C1 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.0) elimination constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),separable.
(7.0) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C1),separable.
(7.0) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C2),separable.
(7.0) program 652:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- copyskip1(A,C),inv1(C,B).
(7.0) TP: 0, TN: 0, FN: 1, FP: 0
(7.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv1(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))))
(7.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.0) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv1V0V1copyskip1V0V2inv1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.0) program 653:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(7.0) TP: 0, TN: 0, FN: 1, FP: 0
(7.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), mk_uppercase(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv1(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))))
(7.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.0) generalisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.0) program 654:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- skip1(A,C),inv1(C,B).
(7.0) TP: 0, TN: 0, FN: 1, FP: 0
(7.0) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (mk_uppercase(+V0,-V2), mk_uppercase(+V2,-V1))), (2, inv1(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))))
(7.0) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.0) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),clause_size(C1,2),included_clause_inv1V0V1inv1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.0) program 655:
  f(A,B) :- inv1(A,C),inv1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(7.0) TP: 0, TN: 0, FN: 1, FP: 0
(7.0) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.1) program 656:
  f(A,B) :- inv1(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),inv1(C,B).
(7.1) TP: 0, TN: 0, FN: 1, FP: 0
(7.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2mk_uppercaseV2V1(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1inv1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.1) program 657:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- mk_uppercase(A,C),mk_uppercase(C,B).
  inv1(A,B) :- mk_uppercase(A,C),copyskip1(C,B).
(7.1) TP: 0, TN: 0, FN: 1, FP: 0
(7.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),C1 < 3,included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.1) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(7.1) elimination constraint:
:-included_clause_inv1V0V1mk_uppercaseV0V2mk_uppercaseV2V1(C1),separable.
(7.1) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1mk_uppercaseV0V2(C2),separable.
(7.1) program 658:
  f(A,B) :- copyskip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(7.1) TP: 0, TN: 0, FN: 1, FP: 0
(7.1) FAILED!!! ((0, f(+V0,-V1), (copyskip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(7.1) specialisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.1) elimination constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),separable.
(7.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(7.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(7.1) generalisation constraint:
:-included_clause_fV0V1copyskip1V0V2inv1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.1) program 659:
  f(A,B) :- skip1(A,C),inv1(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(7.1) TP: 0, TN: 0, FN: 1, FP: 0
(7.1) FAILED!!! ((0, f(+V0,-V1), (skip1(+V0,-V2), inv1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), skip1(+V2,-V1))), (2, inv2(+V0,-V1), (skip1(+V0,-V2), copyskip1(+V2,-V1))))
(7.1) specialisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.1) elimination constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),separable.
(7.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(7.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(7.1) generalisation constraint:
:-included_clause_fV0V1inv1V2V1skip1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.1) program 660:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),inv2(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(7.1) TP: 0, TN: 0, FN: 1, FP: 0
(7.1) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.1) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(7.1) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2inv2V2V1(C1),separable.
(7.1) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(7.1) program 661:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(7.2) TP: 0, TN: 0, FN: 1, FP: 0
(7.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(7.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(7.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(7.2) program 662:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(7.2) TP: 0, TN: 0, FN: 1, FP: 0
(7.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(7.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(7.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V2V1skip1V0V2(C2),separable.
(7.2) program 663:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(7.2) TP: 0, TN: 0, FN: 1, FP: 0
(7.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(7.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(7.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(7.2) program 664:
  f(A,B) :- inv1(A,C),inv2(C,B).
  inv1(A,B) :- inv2(A,C),skip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(7.2) TP: 0, TN: 0, FN: 1, FP: 0
(7.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),C0 < 3,included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2inv2V2V1(C0),separable.
(7.2) elimination constraint:
:-included_clause_inv1V0V1inv2V0V2skip1V2V1(C1),separable.
(7.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(7.2) program 665:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(7.2) TP: 0, TN: 0, FN: 1, FP: 0
(7.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), copyskip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(7.2) specialisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.2) elimination constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),separable.
(7.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(7.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(7.2) generalisation constraint:
:-included_clause_fV0V1copyskip1V2V1inv1V0V2(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.2) program 666:
  f(A,B) :- inv1(A,C),skip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- copyskip1(A,C),copyskip1(C,B).
(7.2) TP: 0, TN: 0, FN: 1, FP: 0
(7.2) FAILED!!! ((0, f(+V0,-V1), (inv1(+V0,-V2), skip1(+V2,-V1))), (1, inv1(+V0,-V1), (inv2(+V0,-V2), copyskip1(+V2,-V1))), (2, inv2(+V0,-V1), (copyskip1(+V0,-V2), copyskip1(+V2,-V1))))
(7.2) specialisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),C0 < 3,included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),C1 < 3,included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),C2 < 3,not clause(3),C1!=C0,C2!=C0,C2!=C1.
(7.2) elimination constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),separable.
(7.2) elimination constraint:
:-included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),separable.
(7.2) elimination constraint:
:-included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),separable.
(7.2) generalisation constraint:
:-included_clause_fV0V1inv1V0V2skip1V2V1(C0),clause_size(C0,2),included_clause_inv1V0V1copyskip1V2V1inv2V0V2(C1),clause_size(C1,2),included_clause_inv2V0V1copyskip1V0V2copyskip1V2V1(C2),clause_size(C2,2),C1!=C0,C2!=C0,C2!=C1.
(7.3) program 667:
  f(A,B) :- inv1(A,C),copyskip1(C,B).
  inv1(A,B) :- inv2(A,C),copyskip1(C,B).
  inv2(A,B) :- skip1(A,C),copyskip1(C,B).
(7.3) TP: 1, TN: 0, FN: 0, FP: 0
f(A,B) :- inv1(A,C),copyskip1(C,B).
inv1(A,B) :- inv2(A,C),copyskip1(C,B).
inv2(A,B) :- skip1(A,C),copyskip1(C,B).
